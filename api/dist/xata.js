"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getXataClient = exports.XataClient = void 0;
// Generated by Xata Codegen 0.29.5. Please do not edit.
const client_1 = require("@xata.io/client");
const tables = [
    {
        name: "group",
        columns: [
            { name: "messages", type: "json", notNull: true, defaultValue: "[{}]" },
            {
                name: "name",
                type: "string",
                notNull: true,
                defaultValue: "New Group",
            },
            {
                name: "devices",
                type: "json",
                notNull: true,
                defaultValue: '{\n  "client": [],\n  "server": []\n}',
            },
            { name: "assignedUser", type: "link", link: { table: "user" } },
        ],
        revLinks: [
            { column: "assignedGroup", table: "clientDevice" },
            { column: "assignedGroup", table: "serverDevice" },
        ],
    },
    {
        name: "clientDevice",
        columns: [
            { name: "name", type: "string" },
            { name: "messages", type: "json", notNull: true, defaultValue: "[{}]" },
            { name: "assignedGroup", type: "link", link: { table: "group" } },
            { name: "assignedUser", type: "link", link: { table: "user" } },
        ],
    },
    {
        name: "serverDevice",
        columns: [
            { name: "name", type: "string" },
            { name: "messages", type: "json", notNull: true, defaultValue: "[{}]" },
            { name: "assignedGroup", type: "link", link: { table: "group" } },
            { name: "assignedUser", type: "link", link: { table: "user" } },
        ],
    },
    {
        name: "message",
        columns: [
            { name: "from", type: "string" },
            { name: "to", type: "string" },
            { name: "content", type: "text" },
            { name: "status", type: "int" },
        ],
    },
    {
        name: "user",
        columns: [
            { name: "password", type: "string", defaultValue: "" },
            { name: "username", type: "string", unique: true },
        ],
        revLinks: [
            { column: "assignedUser", table: "group" },
            { column: "assignedUser", table: "clientDevice" },
            { column: "assignedUser", table: "serverDevice" },
        ],
    },
];
const DatabaseClient = (0, client_1.buildClient)();
const defaultOptions = {
    databaseURL: "https://SPARK-7cmp99.us-east-1.xata.sh/db/SPARK-API",
};
class XataClient extends DatabaseClient {
    constructor(options) {
        super(Object.assign(Object.assign({}, defaultOptions), options), tables);
    }
}
exports.XataClient = XataClient;
let instance = undefined;
const getXataClient = () => {
    if (instance)
        return instance;
    instance = new XataClient();
    return instance;
};
exports.getXataClient = getXataClient;
